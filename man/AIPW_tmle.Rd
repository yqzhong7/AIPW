% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/AIPW_tmle.R
\docType{class}
\name{AIPW_tmle}
\alias{AIPW_tmle}
\title{Augmented Inverse Probablity Weighting (AIPW) take TMLE or tmle3 inputs}
\format{
\code{\link{R6Class}} object.
}
\value{
\code{AIPW} object
}
\description{
Define an R6Class aipw_tmle object whcih takes TMLE or tmle3 inputs
}
\details{
create an AIPW object
}
\examples{

## ------------------------------------------------
## Method `AIPW_tmle$new`
## ------------------------------------------------

\dontrun{
vec <- function() sample(0:1,100,replace = TRUE)
df <- data.frame(replicate(4,vec()))
names(df) <- c("A","Y","W1","W2")

## From tmle
require(tmle)
require(SuperLearner)
tmle_fit <- tmle(Y=df$Y,A=df$A,W=subset(df,select=c("W1","W2")),
                 Q.SL.library="SL.glm",
                 g.SL.library="SL.glm",
                 family="binomial")
AIPW_tmle$new(A=df$A,Y=df$Y,tmle_fit = tmle_fit,verbose = TRUE)$summary()


## From tmle3
# tmle3 simple implementation
require(tmle3)
require(sl3)
node_list <- list(A = "A",Y = "Y",W = c("W1","W2"))
or_spec <- tmle_OR(baseline_level = "0",contrast_level = "1")
tmle_task <- or_spec$make_tmle_task(df,node_list)
lrnr_glm <- make_learner(Lrnr_glm)
sl <- Lrnr_sl$new(learners = list(lrnr_glm))
learner_list <- list(A = sl, Y = sl)
tmle3_fit <- tmle3(or_spec, data=df, node_list, learner_list)

# parse tmle3_fit into AIPW_tmle class
AIPW_tmle$new(A=df$A,Y=df$Y,tmle_fit = tmle3_fit,verbose = TRUE)$summary()
}
}
\section{Super class}{
\code{\link[AIPW:AIPW_base]{AIPW::AIPW_base}} -> \code{AIPW_tmle}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{AIPW_tmle$new()}}
\item \href{#method-clone}{\code{AIPW_tmle$clone()}}
}
}
\if{html}{
\out{<details open ><summary>Inherited methods</summary>}
\itemize{
\item \out{<span class="pkg-link" data-pkg="AIPW" data-topic="AIPW_base" data-id="plot.p_score">}\href{../../AIPW/html/AIPW_base.html#method-plot.p_score}{\code{AIPW::AIPW_base$plot.p_score()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="AIPW" data-topic="AIPW_base" data-id="summary">}\href{../../AIPW/html/AIPW_base.html#method-summary}{\code{AIPW::AIPW_base$summary()}}\out{</span>}
}
\out{</details>}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
Create a new \code{AIPW_tmle} object.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{AIPW_tmle$new(Y = NULL, A = NULL, tmle_fit = NULL, verbose = TRUE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{Y}}{Outcome (binary integer: 0 or 1)}

\item{\code{A}}{Exposure (binary integer: 0 or 1)}

\item{\code{tmle_fit}}{A fitted \code{tmle} object}

\item{\code{verbose}}{Whether to show progression bar and print the result (logical; Default = FALSE)}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A new \code{AIPW_tmle} obejct
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{\dontrun{
vec <- function() sample(0:1,100,replace = TRUE)
df <- data.frame(replicate(4,vec()))
names(df) <- c("A","Y","W1","W2")

## From tmle
require(tmle)
require(SuperLearner)
tmle_fit <- tmle(Y=df$Y,A=df$A,W=subset(df,select=c("W1","W2")),
                 Q.SL.library="SL.glm",
                 g.SL.library="SL.glm",
                 family="binomial")
AIPW_tmle$new(A=df$A,Y=df$Y,tmle_fit = tmle_fit,verbose = TRUE)$summary()


## From tmle3
# tmle3 simple implementation
require(tmle3)
require(sl3)
node_list <- list(A = "A",Y = "Y",W = c("W1","W2"))
or_spec <- tmle_OR(baseline_level = "0",contrast_level = "1")
tmle_task <- or_spec$make_tmle_task(df,node_list)
lrnr_glm <- make_learner(Lrnr_glm)
sl <- Lrnr_sl$new(learners = list(lrnr_glm))
learner_list <- list(A = sl, Y = sl)
tmle3_fit <- tmle3(or_spec, data=df, node_list, learner_list)

# parse tmle3_fit into AIPW_tmle class
AIPW_tmle$new(A=df$A,Y=df$Y,tmle_fit = tmle3_fit,verbose = TRUE)$summary()
}
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{AIPW_tmle$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
